!function(){"use strict";angular.module("ep.formly",["ep.formly.core","ep.formly.layout","ep.formly.theme","ep.formly.samples","ep.formly.directives"])}(),function(){"use strict";function e(e,t,a){function o(e,o,i){function r(e,o){e.forEach(function(e){angular.isUndefined(e)||(e.config.resolve=angular.extend(e.config.resolve||{},l.resolveAlways),t.state(e.state,e.config))}),o&&!p&&(p=!0,a.otherwise("404/PageNotFound"))}function n(){o.$on("$stateChangeError",function(t,a,o,l,i,r){if(!d){u.errors++,d=!0;(function(e){"Error routing to "+(a&&(a.title||a.name||a.loadedTemplateUrl)||"unknown target")+". "+e.message||e.data||(e.statusText,e.status)})(r);t.preventDefault(),e.path(r.handlerPath?r.handlerPath:"/")}})}function s(){return i.get()}function m(){o.$on("$stateChangeSuccess",function(e,t,a,i,r){u.changes++,d=!1;var n=l.docTitle+" "+(t.title||"");o.title=n})}function c(){o.$on("$stateChangeSuccess",function(e,t,a,l,r){i.get().filter(function(e){e.abstract&&i.includes(e.name)&&e.appTitle&&(o.appFooterTitle=e.appTitle,o.appTitle=e.appTitle)})})}var d=!1,p=!1,u={errors:0,changes:0},f={configureStates:r,getStates:s,stateCounts:u};return function(){n(),m(),c()}(),f}var l={docTitle:void 0,resolveAlways:{}};e.html5Mode(!0),this.configure=function(e){angular.extend(l,e)},this.$get=o,o.$inject=["$location","$rootScope","$state"]}angular.module("ep.formly.core",["formly","ngSanitize","ui.router"]).provider("routerHelper",e),e.$inject=["$locationProvider","$stateProvider","$urlRouterProvider"]}(),function(){"use strict";angular.module("ep.formly.directives",[])}(),function(){"use strict";angular.module("ep.formly.samples",[])}(),function(){"use strict";angular.module("ep.formly.layout",[])}(),function(){"use strict";function e(e){!function(){console.log("mainController activated!")}(),e.openLeftMenu=function(){}}angular.module("ep.formly").controller("mainController",e),e.$inject=["$scope"]}(),function(){"use strict";function e(e){e.options.timeOut=4e3,e.options.positionClass="toast-bottom-right"}angular.module("ep.formly.core").config(e),e.$inject=["toastr"]}(),function(){"use strict";angular.module("ep.formly.core").constant("toastr",toastr)}(),function(){"use strict";function e(e){e.configureStates(t(),"/")}function t(){return[{state:"404",config:{abstract:!0,template:"<ui-view></ui-view>",url:"/404",settings:{icon:"compass"}}},{state:"404.PageNotFound",config:{url:"/PageNotFound",templateUrl:"app/core/ep404NotFound.html"}}]}angular.module("ep.formly.core").run(e),e.$inject=["routerHelper"]}(),function(){"use strict";function e(e){var t=this;t.formModel={accordionData:[{firstname:"Sitaramraju",lastname:"Alluri",title:"Rebel"},{firstname:"Laxmi",lastname:"Bai",title:"Rani"},{firstname:"Chandra",lastname:"Shekhar",title:"Azad"}]},t.accordionOptionsArray=[{heading:"Freedom Fighter: AP",icon:"account_balance",fields:[{key:"firstname",id:"firstname",type:"ep-text",templateOptions:{label:"First Name"},expressionProperties:{"templateOptions.disabled":"formState.disabled"}},{key:"lastname",id:"lastname",type:"ep-text",templateOptions:{label:"Last Name"}},{key:"title",id:"title",type:"ep-text",templateOptions:{label:"Title"}}],options:{formState:{disabled:!0}}},{heading:"Freedom Fighter from Panipat",icon:"account_balance_wallet",fields:[{key:"firstname",id:"firstname",type:"ep-text",templateOptions:{label:"First Name"}},{key:"lastname",id:"lastname",type:"ep-text",templateOptions:{label:"Last Name"}},{key:"title",id:"title",type:"ep-text",templateOptions:{label:"Title"}}]},{heading:"Freedom Fighter from Madhya Pradesh",icon:"chrome_reader_mode",fields:[{key:"firstname",id:"firstname",type:"ep-text",templateOptions:{label:"First Name"}},{key:"lastname",id:"lastname",type:"ep-text",templateOptions:{label:"Last Name"}},{key:"title",id:"title",type:"ep-text",templateOptions:{label:"Title"}}]}],t.userFields=[{key:"accordionData",type:"ep-accordion",templateOptions:{contentClass:"contentClass",toolBarClass:"toolBarClass",toolBarClassActive:"toolBarClassActive",accordionOptionsArray:t.accordionOptionsArray}}]}angular.module("ep.formly.samples").controller("accordionController",e),e.$inject=["$scope"]}(),function(){"use strict";function e(e,t,a,o){var l=this;l.formModel={person:{index:8,name:"Michael Huffman",age:24,balance:"$2,028.75"}},l.messageCol=[{attr:"required",message:"You have to select a person"},{attr:"md-require-match",message:"Please select an existing person"},{attr:"minlength",message:"Your entry is not long enough"}],l.userFields=[{key:"person",id:"person",type:"ep-auto-complete",templateOptions:{label:"Person",minLength:13,maxLength:14,required:!0,displayProperty:"name",isDisabled:!1,noCache:!0,placeholder:"Select a person",resource:{apiUrl:"/api/filterJson",postObj:{filename:"piggybank",propname:"name"}},data:[{index:8,name:"Michael Huffman",age:24,balance:"$2,028.75"},{index:9,name:"Bartlett Baird",age:32,balance:"$2,787.56"},{index:10,name:"Baird Mccray",age:23,balance:"$2,090.15"},{index:11,name:"Barker Hall",age:25,balance:"$1,022.24"}]},validation:{messages:{required:"'Person is required'",minlength:"'Min length error'",maxlength:"'Max length error'"}}}],l.options={formState:{programName:"Nissan",formName:"Sample"}},l.selectedItemNew={index:8,name:"Michael Huffman",age:24,balance:"$2,028.75"},l.query=function(e){var a=e||"";return t.post("/api/filterJson",{filename:"piggybank",propname:"name",searchText:a}).then(function(e){return e.data},function(e){})}}angular.module("ep.formly.samples").controller("AutoCompleteController",e),e.$inject=["$scope","$http","$q","$log"]}(),function(){"use strict";function e(e){var t=this;t.formModel={action1:"Yes"},t.userFields=[{key:"button",id:"Button1",type:"ep-button",templateOptions:{class:"md-raised md-primary",title:"Submit",label:"Raised Button",onClick:"formState.onClick(model)"}},{key:"button",id:"Button2",type:"ep-button",templateOptions:{class:"md-default",title:"Submit",label:"Flat Button",onClick:"formState.onClick(model)"}},{key:"button",id:"Button3",type:"ep-button",templateOptions:{class:"md-fab md-mini md-primary md-icon-button",onClick:"formState.onClick(model)",label:'<i class="material-icons ng-scope">account_circle</i>'}},{key:"button",id:"Button4",type:"ep-button",templateOptions:{class:"md-primary",href:"https://www.google.com/",target:"_blank",label:"Link Button"}},{key:"button",id:"Button5",type:"ep-button",templateOptions:{class:"md-primary  md-icon-button",onClick:"formState.onClick(model)",label:'<i class="material-icons md-dark">cake</i>'}}],t.actualFormFields=angular.copy(t.userFields),t.options={formState:{programName:"Nissan",formName:"Sample",onClick:function(e){alert("You Clicked on Action "+e.action1)}}}}angular.module("ep.formly.samples").controller("buttonsController",e),e.$inject=["$scope"]}(),function(){"use strict";function e(e){var t=this;t.submit=function(e){t.myform.$invalid&&angular.forEach(t.myform.$error,function(e){angular.forEach(e,function(e){e.$setTouched()})}),console.log(e),console.log(t.myForm)},t.formModel={action1:"Data 1",action2:"Data 2"},t.userFields=[{key:"Card",id:"Card",type:"ep-card",templateOptions:{headerRequired:!0,headerAvatar:"images/avatar.png",headerTitle:"Header Title",headerSubTitle:"Header SubTitle",cardImage:"images/card-image.png",titleRequired:!0,title:"Card Headline",subTitle:"Card Sub Headline",cardMedia:'<img class="md-media-sm" src="images/avatar.png">',content:"<p>This is sample card Content</p>",actionsRequired:!0,action1Class:"md-fab md-raised md-icon-button md-primary",action2Class:"md-raised md-primary",action1Text:'<i class="material-icons ng-scope">account_circle</i>',action2Text:"Action 2",footer:"Footer",onClick1:"formState.onClick1(model)",onClick2:"formState.onClick2(model)"}}],t.actualFormFields=angular.copy(t.userFields),t.options={formState:{programName:"Nissan",formName:"Sample",onClick1:function(e){alert("You Clicked on Action 1 "+e.action1)},onClick2:function(e){alert("You Clicked on Action 2 "+e.action2)}}}}angular.module("ep.formly.samples").controller("cardController",e),e.$inject=["$scope"]}(),function(){"use strict";function e(e){var t=this;t.submit=function(e){t.myform.$invalid&&angular.forEach(t.myform.$error,function(e){angular.forEach(e,function(e){e.$setTouched()})}),console.log(e),console.log(t.myForm)},t.formModel={notifications:!0,SelectedOptions:[{id:1,name:"Afghanistan"}]},t.options={formState:{countryOptions:[{id:1,name:"Afghanistan"},{id:2,name:"Albania"},{id:3,name:"Algeria"},{id:4,name:"American Samoa"},{id:5,name:"Andorra"}]}},t.userFields=[{key:"notifications",id:"notifications",type:"ep-checkbox",templateOptions:{label:"Notifications",required:!0,islist:!1},validation:{messages:{required:"Notifications is required"}}},{key:"isWarning",id:"isWarning",type:"ep-checkbox",templateOptions:{label:"is Warning?",required:!0,ngTrueValue:"'Yes'",ngFalseValue:"'No'",className:"md-warn",islist:!1},validation:{messages:{required:"Notifications is required"}}},{key:"SelectedOptions",id:"SelectedOptions",type:"ep-checkbox",templateOptions:{label:"is Warning?",required:!0,className:"md-warn",islist:!0},expressionProperties:{"templateOptions.options":"formState.countryOptions"},validation:{messages:{required:"Notifications is required"}}}],t.actualFormFields=angular.copy(t.userFields)}angular.module("ep.formly.samples").controller("checkboxController",e),e.$inject=["$scope"]}(),function(){"use strict";function e(e){e.name="dataTableController",console.log("dataTableController has been loaded!");var t=this;t.formModel={Nutrition:[{id:601,name:"Frozen joghurt",calories:159,fat:6,carbs:24,protein:4,sodium:87,calcium:"14%",iron:"1%"},{id:602,name:"Ice cream sandwitch",calories:237,fat:9,carbs:37,protein:4.3,sodium:129,calcium:"84%",iron:"1%"}]},t.options={formState:{data:[{id:601,name:"Frozen joghurt",calories:159,fat:6,carbs:24,protein:4,sodium:87,calcium:"14%",iron:"1%"},{id:602,name:"Ice cream sandwitch",calories:237,fat:9,carbs:37,protein:4.3,sodium:129,calcium:"84%",iron:"1%"},{id:603,name:"Eclair",calories:262,fat:16,carbs:24,protein:6,sodium:337,calcium:"6%",iron:"7%"},{id:604,name:"Cupkake",calories:305,fat:3.7,carbs:67,protein:4.3,sodium:413,calcium:"3%",iron:"8%"},{id:605,name:"Gingerbread",calories:356,fat:16,carbs:49,protein:2.9,sodium:327,calcium:"7%",iron:"16%"},{id:606,name:"Jelly bean",calories:375,fat:0,carbs:94,protein:0,sodium:50,calcium:"0%",iron:"0%"},{id:607,name:"Lollipop",calories:392,fat:.2,carbs:98,protein:0,sodium:38,calcium:"0%",iron:"2%"},{id:608,name:"Honeycomb",calories:408,fat:3.2,carbs:87,protein:6.5,sodium:562,calcium:"0%",iron:"45%"},{id:609,name:"Donut",calories:452,fat:25,carbs:51,protein:4.9,sodium:326,calcium:"2%",iron:"22%"},{id:610,name:"KitKat",calories:518,fat:26,carbs:65,protein:7,sodium:54,calcium:"12%",iron:"6%"}]}},t.userFields=[{type:"ep-datatable",templateOptions:{columnDefs:[{field:"name",displayName:"Dessert (100g serving)",width:"20%"},{field:"calories",displayName:"Calories",width:"20%",type:"number"},{field:"fat",displayName:"Fat (g)",width:"60%",type:"number"},{field:"carbs",displayName:"Carbs",width:"60%"}],sortBy:"name",paging:!1,searching:!1,page:1,pageSize:5,pageSizeOptions:[5,10,15,20],SelectCheckboxColumn:!1,selected:[]},expressionProperties:{"templateOptions.options":"formState.data"}},{key:"Nutrition",type:"ep-datatable",templateOptions:{columnDefs:[{field:"name",displayName:"Dessert (100g serving)",width:"20%"},{field:"calories",displayName:"Calories",width:"20%",type:"number"},{field:"fat",displayName:"Fat (g)",width:"60%",type:"number"},{field:"carbs",displayName:"Carbs",width:"60%"}],sortBy:"name",paging:!0,searching:!0,page:1,pageSize:5,pageSizeOptions:[5,10,15,20],SelectCheckboxColumn:!0,selected:[]},expressionProperties:{"templateOptions.options":"formState.data"}}],t.selected=t.userFields[0].templateOptions.selected,t.selected2=t.userFields[1].templateOptions.selected}angular.module("ep.formly.samples").controller("dataTableController",e),e.$inject=["$scope"]}(),function(){"use strict";function e(e){console.log("datepickerController has been loaded!");var t=this;t.formModel={DOB:"05/13/2016"},t.options={formState:{}},t.userFields=[{key:"DOB",type:"ep-datepicker",id:"EmployeeDOB",templateOptions:{label:"DOB",options:[],required:!0,defaultRequired:!0,disable:!0,format:"yyyy/MM/dd",minDate:"1/1/2015",maxDate:"1/1/2020",disabled:!1},validation:{messages:{required:'"DOB is required"',mindate:'"minDate is required"'}}}]}angular.module("ep.formly.samples").controller("datepickerController",e),e.$inject=["$scope"]}(),function(){"use strict";function e(e,t){function a(){t.post("/api/getJson/countries").then(function(e){o.options.formState.countryOptions=e.data})}console.log("epDropdownDemoController has been loaded!");var o=this;!function(){a(),o.formModel={selectedUser:101},o.options={formState:{change:function(e,a,l,i){if(a.formControl&&a.formControl.$touched){var r=angular.isUndefined(e)?"":e;t.post("/api/filterJson",{filename:"statesList",propname:"country-code",searchText:r}).then(function(e){o.options.formState.states=e.data},function(e){o.options.formState.states=[]}),alert("dropdown changed"+e)}}}},o.userFields=[{key:"selectedUser",type:"ep-dropdown",id:"Countries",templateOptions:{label:"Countries",options:[],required:!0,valueProp:"id",labelProp:"Name",multiple:!1,defaultRequired:!0,enableSearch:!0,onChange:""},expressionProperties:{"templateOptions.options":"formState.countryOptions","templateOptions.onChange":"formState.change($modelValue, options, scope, $event)"},validation:{messages:{required:'"Please select a Country"'}}},{key:"states",type:"ep-dropdown",id:"States",templateOptions:{label:"States",options:[],required:!0,valueProp:"key",labelProp:"name",multiple:!1,defaultRequired:!0,enableSearch:!0},expressionProperties:{"templateOptions.options":"formState.states"},hideExpression:"!model.selectedUser",validation:{messages:{required:'"Please select a state"'}}}]}()}angular.module("ep.formly.samples").controller("epDropdownDemoController",e),e.$inject=["$scope","$http"]}(),function(){"use strict";function e(e){var t=this;t.submit=function(e){t.myform.$invalid&&angular.forEach(t.myform.$error,function(e){angular.forEach(e,function(e){e.$setTouched()})})},t.formModel={menu:[{name:"About Coupon Library"},{name:"Dealer / Retailer Profile"},{name:"Coupon Selector"},{name:"Summary Area"},{name:"Transaction Log"},{name:"Contact Us"},{name:"Manage Adminstration User"},{name:"Add/ Edit Coupon"},{name:"Manage Remainder Services"},{name:"Manager Library API"},{name:"Enrollment Report"}]},t.userFields=[{key:"menu",id:"Menu",type:"ep-dropdown-menu",templateOptions:{label:'<span>Mega</span><span class="caret"></span>',bodyClass:"full-width p-l-10 p-b-20 p-t-20",dropdownClass:"dropdown-toggle nav-link",bodyTemplate:'<ul style="list-style: none; columns:3"><li  class="p-t-10 p-b-15" ng-repeat="x in model[options.key]"><a href="#" class="btn-primary-hover"><i class="zmdi zmdi-chevron-right m-r-5"></i>{{x.name}}</a></li></ul>'}},{key:"Notification",id:"Notification",type:"ep-dropdown-menu",templateOptions:{label:'<span class="badge mini status danger"></span><i class="zmdi zmdi-notifications"></i>',bodyClass:"dropdown-lg-menu dropdown-menu-left dropdown-alt",dropdownClass:"col-sm-6",bodyTemplate:'<li class="dropdown-menu-header"><ul class="card-actions icons  left-top"><li class="withoutripple"><a href="javascript:void(0)" class="withoutripple"><i class="zmdi zmdi-settings"></i></a></li></ul><h5>NOTIFICATIONS</h5><ul class="card-actions icons right-top"><li><a href="javascript:void(0)"><i class="zmdi zmdi-check-all"></i></a></li></ul></li><li><div class="card"><a href="javascript:void(0)" class="pull-right dismiss" data-dismiss="close"><i class="zmdi zmdi-close"></i></a><div class="card-body"><ul class="list-group "><li class="list-group-item "><span class="pull-left"><img src="assets/img/profiles/11.jpg" alt="" class="img-circle max-w-40 m-r-10 "></span><div class="list-group-item-body"><div class="list-group-item-heading">Dakota Johnson</div><div class="list-group-item-text">Do you want to grab some sushi for lunch?</div></div></li></ul></div></div></li><li><div class="card"><a href="javascript:void(0)" class="pull-right dismiss" data-dismiss="close"><i class="zmdi zmdi-close"></i></a><div class="card-body"><ul class="list-group "><li class="list-group-item "><span class="pull-left"><img src="assets/img/profiles/07.jpg" alt="" class="img-circle max-w-40 m-r-10 "></span><div class="list-group-item-body"><div class="list-group-item-heading">Todd Cook</div><div class="list-group-item-text">Let\'s schedule a meeting with our design team at 10am.</div></div></li></ul></div></div></li><li><div class="card"><a href="javascript:void(0)" class="pull-right dismiss" data-dismiss="close"><i class="zmdi zmdi-close"></i></a><div class="card-body"><ul class="list-group "><li class="list-group-item "><span class="pull-left"><img src="assets/img/profiles/05.jpg" alt="" class="img-circle max-w-40 m-r-10 "></span><div class="list-group-item-body"><div class="list-group-item-heading">Jennifer Ross</div><div class="list-group-item-text">We\'re looking to hire two more protypers to our team.</div></div></li></ul></div></div></li><li class="dropdown-menu-footer"><a href="javascript:void(0)">All notifications </a></li>'}}],t.actualFormFields=angular.copy(t.userFields),t.options={formState:{programName:"Ford Campaigns",formName:"Campaign Detail"}}}angular.module("ep.formly.samples").controller("dropdownmenuTemplate",e),e.$inject=["$scope"]}(),function(){"use strict";function e(e){var t=this;t.submit=function(e){t.myform.$invalid&&angular.forEach(t.myform.$error,function(e){angular.forEach(e,function(e){e.$setTouched()})}),console.log(e),console.log(t.myForm)},t.userFields=[{key:"Description",id:"Description",type:"ep-fileupload",className:"col-md-12",templateOptions:{label:"Upload files",buttonText:"File",previewElemId:"preview",placeHolder:"Choose file..",required:!0,uploadUrl:"/api/uploadFile",message:"Upload the file bro!",maxSize:"5MB",fileName:""},validation:{messages:{required:'"Description is required"'}}}],t.actualFormFields=angular.copy(t.userFields),t.options={formState:{programName:"Ford Campaigns",formName:"Campaign Detail"}},function(){console.log("Activated Fileupload")}()}angular.module("ep.formly.samples").controller("fileuploadTemplate",e),e.$inject=["$scope"]}(),function(){"use strict";function e(e){var t=this;t.formModel={dealerName:"Nissan",address:"12346 MainSterrt Ave.",dealerCode:"ABCDE123456XYZ",city:"Chicago",state:"Illinois",zipCode:"60606",website:"www.NissanDealerCicago.com"},t.userFields=[{key:"dealerName",id:"dealerName",type:"ep-label",templateOptions:{label:"Dealer Name"}},{key:"address",id:"address",type:"ep-label",templateOptions:{label:"Address"}},{key:"dealerCode",id:"dealerCode",type:"ep-label",templateOptions:{label:"Dealer Code"}},{key:"city",id:"city",type:"ep-label",templateOptions:{label:"City"}}],t.actualFormFields=angular.copy(t.userFields),t.options={formState:{programName:"Ford Campaigns",formName:"Campaign Detail"}},function(){console.log("Activated Textbox")}()}angular.module("ep.formly.samples").controller("labelTemplate",e),e.$inject=["$scope"]}(),function(){"use strict";function e(e){var t=this;t.navBarOptions={title:"Dealer Custom Coupon Center",logo:{imageSrc:"/images/NIssan_logo.png",altText:"Nissan"},menus:{top:{active:"page3",items:[{url:"/materialdemo",name:"page1",label:"about"},{url:"/datatable",name:"page2",label:"contact"},{url:"#",name:"page3",label:"profile"}]},bottom:{active:"page1",items:[{url:"/materialdemo",name:"page1",label:"coupon selector"},{url:"#",name:"page2",label:"coupon summary"},{url:"#",name:"page3",label:"transaction log"}]}}},t.formModel={dealer:{dealerName:"Nissan Dealer America",address:"12346 MainSterrt Ave.",dealerCode:"ABCDE123456XYZ",city:"Chicago",state:"Illinois",zipCode:"60606",website:"www.NissanDealerChicago.com"},contacts:{contact1:{firstName:"Robert",lastName:"Smith",phoneNumber:"123-456-7890",email:"Robert.Smith@nissan.com"},contact2:{required:!0,firstName:"Robert",lastName:"Smith",phoneNumber:"123-456-7890",email:"Robert.Smith@nissan.com"},contact3:{required:!0,firstName:"Robert",lastName:"Smith",phoneNumber:"123-456-7890",email:"Robert.Smith@nissan.com"}},contactsArray:[{firstName:"Robert",lastName:"Smith",phone:"123-456-7890",email:"Robert.Smith@nissan.com"},{firstName:"John",lastName:"Adams",phone:"123-456-7890",email:"John.Adams@nissan.com"},{firstName:"Danielle",lastName:"Hurst",email:"daniellehurst@nissan.com",phone:"123-456-7890"},{firstName:"Reid",lastName:"Lyons",email:"reidlyons@nissan.com",phone:"123-456-7890"}]},t.formFields=[{key:"Card",id:"Card",type:"ep-card",className:"profileCard",templateOptions:{headerRequired:!1,headerAvatar:"",headerTitle:"",headerSubTitle:"",cardImage:"",titleRequired:!0,title:"Dealer Profile",subTitle:"Review your dealership information and setup your contacts to ensure any relevant notifications are received.",cardMedia:'<div class="md-media-sm"><img class="md-user-avatar"  src="images/Dealer_profile.png"></div>',content:"",actionsRequired:!1,footer:""}},{className:"layout-row content profile-content",fieldGroup:[{key:"dealer",className:"layout-gt-sm-row layout-padding layout-wrap dealerProfile",fieldGroup:[{key:"dealerName",id:"dealerName",type:"ep-label",className:"flex-100 labelfield",templateOptions:{className:"flex-40",label:"Dealer Name",labelClass:"disabledInputLabel"}},{key:"address",id:"address",type:"ep-label",className:"flex-gt-sm-60 labelfield",templateOptions:{label:"Address"}},{key:"dealerCode",id:"dealerCode",type:"ep-label",className:"flex-gt-sm-40 labelfield",templateOptions:{label:"Dealer Code"}},{key:"city",id:"city",type:"ep-label",className:"flex-gt-sm-20 labelfield",templateOptions:{label:"City"}},{key:"state",id:"state",type:"ep-label",className:"flex-gt-sm-20 labelfield",templateOptions:{label:"State"}},{key:"zipCode",id:"zipCode",type:"ep-label",className:"flex-gt-sm-20 labelfield",templateOptions:{label:"Zip Code"}},{key:"photo",id:"photo",type:"ep-fileupload",className:"flex-gt-sm-40 ",templateOptions:{layoutClass:"layout-column",label:"Upload your dealership photo",buttonText:"Upload",placeHolder:"Choose file..",required:!0,uploadUrl:"/images",fileName:"",noTextbox:!1,buttonClass:"md-raised md-nissan",buttonLayout:"layout-row layout-align-end-center"}},{key:"website",id:"website",type:"ep-label",className:"flex-gt-sm-100 labelfield",templateOptions:{label:"Website"}}]},{key:"photo",className:"flex-sm-40",template:'<div class="profile-picture"></div>'}]},{className:"layout-column layout-wrap  content",fieldGroup:[{className:" margin-left-20 layout-row ",template:'<div class="layout-row layout-align-start-center flex"><span class="dealer-heading">Dealer Contacts </span> <span>&nbsp;&nbsp;(Please add at least one contact)</span> </div><div class="flex layout-row layout-align-end-end"><md-button class="md-raised md-default">Add Contact</md-button></div>'},{className:"margin-left-20 flex-100 margin-bottom-20",template:'<div class=" flex-60"><span class="contacts-subhead">Enter the names of up to five employees you want to receive notifications regarding your Dealer Custom Coupon Center account.</span></div>'},{className:"layout-column inputFields",fieldGroup:[{key:"contactsArray",className:"flex-100",template:'<div layout="row" layout-align="center center" class="header" layout-padding><div flex layout="row"><div flex layout="row" layout-align="start center">Send Notification</div><div flex layout="row" layout-align="start center">First Name</div><div flex layout="row" layout-align="start center">Last Name</div><div flex layout="row" layout-align="start center">Phone Number</div><div flex layout="row" layout-align="start center">Email</div><div flex layout="row" layout-align="center center">Edit Contact</div><div flex layout="row" layout-align="center center">Delete Contact</div></div></div><div class="nissan-demo" layout="column" ng-repeat="item in model[options.key]" layout-padding><div layout="row" layout-align="center center"><div flex><div layout="row" layout-align="center center"><md-checkbox class="md-primary" aria-label="selected" color="primary"></md-checkbox></div></div><div flex layout="row" layout-align="start center">{{item.firstName}}</div><div flex layout="row" layout-align="start center">{{item.lastName}}</div><div flex layout="row" layout-align="start center">{{item.phone}}</div><div flex layout="row" layout-align="start center">{{item.email}}</div><div flex><div layout="row" layout-align="center center"><img width="32px" height="32px" src="/images/edit-icon.png"></div></div><div flex><div layout="row" layout-align="center center"><img width="15px" height="16px" src="/images/delete.png"></div></div></div><div  ><md-divider flex ></md-divider></div></div></div></div>'},{className:"layout-row layout-padding",fieldGroup:[{key:"firstName",id:"contact1firstName",type:"ep-text",className:"flex dealer-contact-lbl",templateOptions:{placeholder:"First Name",label:"First Name",required:!0},validation:{messages:{required:'"First Name is required"'}}},{key:"lastName",id:"contact1lastName",type:"ep-text",className:"flex dealer-contact-lbl",templateOptions:{placeholder:"Last Name",label:"Last Name",required:!0},validation:{messages:{required:'"Last Name is required"'}}},{key:"phone",id:"contact1phoneNumber",type:"ep-text",className:"flex dealer-contact-lbl",templateOptions:{placeholder:"Phone Number",label:"Phone Number",required:!0,validator:"phone"},validation:{messages:{required:'"Phone Number is required"',pattern:'"Invalid Phone Number: Format xxx-xxx-xxxx"'}}},{key:"email",id:"contact1email",type:"ep-text",className:"flex dealer-contact-lbl",templateOptions:{placeholder:"Email",label:"Email",required:!0,validator:"email"},validation:{messages:{required:'"Email is required"',pattern:'"Invalid Email"'}}}]}]},{className:"layout-row  layout-align-end-center",fieldGroup:[{key:"cancel",id:"cancel",type:"ep-button",templateOptions:{class:"md-raised md-default",title:"Cancel",label:"Cancel",onClick:"formState.onClick(model)"}},{key:"button",id:"Button1",type:"ep-button",templateOptions:{class:"md-raised md-nissan",title:"save",label:"save"}}]}]}],t.actualFormFields=angular.copy(t.formFields),t.options={formState:{programName:"Ford Campaigns",formName:"Campaign Detail",onClick:function(e){alert("button clicked")}}},function(){console.log("Activated Material Demo")}()}angular.module("ep.formly.samples").controller("materialDemoTemplate",e),e.$inject=["$scope"]}(),function(){"use strict";function e(e){console.log("modalpopupController has been loaded!");var t=this;t.submit=function(e){t.myform.$invalid&&angular.forEach(t.myform.$error,function(e){angular.forEach(e,function(e){e.$setTouched()})}),console.log(e),console.log(t.myForm)},t.formModel={result:""},t.userFields=[{id:"test1",key:"result",type:"ep-modalpopup",templateOptions:{popupType:"Alert",title:"Alert Title",textContent:"Alert message goes here...",clickOutsideToClose:!0,okText:"Got it",buttonText:"Alert Dialog",ariaLabel:"Alert Dialog Demo",escapeToClose:!1}},{id:"test2",key:"result",type:"ep-modalpopup",templateOptions:{popupType:"Confirm",title:"Confirm Title",textContent:"Confirm message goes here...",clickOutsideToClose:!0,okText:"Ok",cancelText:"Cancel",buttonText:"Confirm Dialog",ariaLabel:"Confirm Dialog Demo",escapeToClose:!1}},{id:"test3",key:"result",type:"ep-modalpopup",templateOptions:{popupType:"ModalPage",title:"Modal Title",textContent:"Confirm message goes here...",clickOutsideToClose:!0,okText:"Ok",cancelText:"Cancel",buttonText:"Custom Dialog",ariaLabel:"Confirm Dialog Demo",templateUrl:"app/samples/modalTemplate.html",escapeToClose:!1}}],t.actualFormFields=angular.copy(t.userFields),t.options={formState:{programName:"Ford Campaigns",formName:"Campaign Detail"}}}angular.module("ep.formly.samples").controller("modalpopupController",e),e.$inject=["$scope"]}(),function(){"use strict";function e(e){console.log("radioButtonController has been loaded!");var t=this;t.submit=function(e){t.myform.$invalid&&angular.forEach(t.myform.$error,function(e){angular.forEach(e,function(e){e.$setTouched()})}),console.log(e),console.log(t.myForm)},t.formModel={},t.options={formState:{employeeOptions:[{id:1,value:"Bob"},{id:2,value:"Alice"},{id:3,value:"Steve"}],onSubmit:t.submit}},t.userFields=[{key:"selectedOption",type:"ep-radiobutton",id:"Employee",className:"width-50",templateOptions:{label:"Employee",className:"md-primary",options:[],required:!0,layout:"row"},expressionProperties:{"templateOptions.options":"formState.employeeOptions"},validation:{messages:{required:'"Employee is required"'}}},{key:"button",id:"Button1",type:"ep-button",templateOptions:{class:"md-raised md-primary",title:"Submit",label:"Submit",onClick:"formState.onSubmit(model)"}}]}angular.module("ep.formly.samples").controller("radioButtonController",e),e.$inject=["$scope"]}(),function(){"use strict";function e(e,t,a,o,l,i){e.name="SamplesController"}angular.module("ep.formly.samples").controller("samplesController",e),e.$inject=["$scope","$log","$q","$timeout","$sce","$compile"]}(),function(){"use strict";function e(e){var t=[{state:"samples",config:{abstract:!0,template:"<div ui-view></div>",url:"/",title:"",appTitle:"",appFooterTitle:"",settings:{icon:"compass"}}},{state:"samples.default",config:{url:"",templateUrl:"app/samples/samples.html",controller:"samplesController",controllerAs:"vm",title:"Samples"}},{state:"samples.textbox",config:{url:"textbox",templateUrl:"app/samples/textbox.html",controller:"textboxTemplate",controllerAs:"vm",title:"Text Box"}},{state:"samples.checkbox",config:{url:"checkbox",templateUrl:"app/samples/checkbox.html",controller:"checkboxController",controllerAs:"vm",title:"CheckBox"}},{state:"samples.switch",config:{url:"switch",templateUrl:"app/samples/switch.html",controller:"switchController",controllerAs:"vm",title:"Switch"}},{state:"samples.dropdownmenu",config:{url:"dropdownmenu",templateUrl:"app/samples/dropdownmenu.html",controller:"dropdownmenuTemplate",controllerAs:"vm",title:"DropDown Menu"}},{state:"samples.textarea",config:{url:"textarea",templateUrl:"app/samples/textarea.html",controller:"textareaTemplate",controllerAs:"vm",title:"Text Area"}},{state:"samples.fileupload",config:{url:"fileupload",templateUrl:"app/samples/fileupload.html",controller:"fileuploadTemplate",controllerAs:"vm",title:"File Upload"}},{state:"samples.dropdown",config:{url:"dropdown",templateUrl:"app/samples/dropdown.html",controller:"epDropdownDemoController",controllerAs:"vm",title:"DropDown"}},{state:"samples.datatable",config:{url:"datatable",templateUrl:"app/samples/datatable.html",controller:"dataTableController",controllerAs:"vm",title:"Data Table"}},{state:"samples.radiobutton",config:{url:"radiobutton",templateUrl:"app/samples/radiobutton.html",controller:"radioButtonController",controllerAs:"vm",title:"Radio Button"}},{state:"samples.autocomplete",config:{url:"autocomplete",templateUrl:"app/samples/autocomplete.html",controller:"AutoCompleteController",controllerAs:"ctrl",title:"Autocomplete"}},{state:"samples.modalpopup",config:{url:"modalpopup",templateUrl:"app/samples/modalpopup.html",controller:"modalpopupController",controllerAs:"vm",title:"Modal Popup"}},{state:"samples.uigrid",config:{url:"uigrid",templateUrl:"app/samples/uigrid.html",controller:"UiGridController",controllerAs:"vm",title:"Ui Grid"}},{state:"samples.card",config:{url:"card",templateUrl:"app/samples/card.html",controller:"cardController",controllerAs:"vm",title:"Card"}},{state:"samples.datepicker",config:{url:"datepicker",templateUrl:"app/samples/datepicker.html",controller:"datepickerController",controllerAs:"vm",title:"Date Picker"}},{state:"samples.buttons",config:{url:"buttons",templateUrl:"app/samples/buttons.html",controller:"buttonsController",controllerAs:"vm",title:"Buttons"}},{state:"samples.tabs",config:{url:"tabs",
templateUrl:"app/samples/tabs.html",controller:"tabsController",controllerAs:"vm",title:"Tabs"}},{state:"samples.label",config:{url:"label",templateUrl:"app/samples/label.html",controller:"labelTemplate",controllerAs:"vm",title:"Label"}},{state:"samples.materialdemo",config:{url:"materialdemo",templateUrl:"app/samples/materialDemo.html",controller:"materialDemoTemplate",controllerAs:"vm",title:"Material Demo"}},{state:"samples.accordion",config:{url:"accordion",templateUrl:"app/samples/accordion.html",controller:"accordionController",controllerAs:"vm",title:"Accordion"}}];e.configureStates(t,"/")}angular.module("ep.formly.samples").run(e),e.$inject=["routerHelper"]}(),function(){"use strict";function e(e){var t=this;t.submit=function(e){t.myform.$invalid&&angular.forEach(t.myform.$error,function(e){angular.forEach(e,function(e){e.$setTouched()})}),console.log(e),console.log(t.myForm)},t.formModel={notifications:!0},t.userFields=[{key:"notifications",id:"notifications",type:"ep-switch",templateOptions:{label:"Notifications",required:!0},validation:{messages:{required:"Notifications is required"}}},{key:"isWarning",id:"isWarning",type:"ep-switch",templateOptions:{label:"is Warning ?",required:!0,ngTrueValue:"'Yes'",ngFalseValue:"'No'",className:"md-warn"},validation:{messages:{required:"Notifications is required"}}}],t.actualFormFields=angular.copy(t.userFields),t.options={formState:{programName:"Nissan",formName:"Sample"}}}angular.module("ep.formly.samples").controller("switchController",e),e.$inject=["$scope"]}(),function(){"use strict";function e(e){var t=this;t.submit=function(e,t){t.$invalid&&angular.forEach(t.$error,function(e){angular.forEach(e,function(e){e.$setTouched()})})},t.formModel={employee:{firstName:"Tony"}},t.employeeFields=[{key:"firstName",id:"firstName",type:"ep-text",className:"flex-20",templateOptions:{label:"First Name",required:!0,maxlength:20,minlength:4,placeholder:"First Name",noFloat:!1},validation:{messages:{required:'"First Name is required"',"md-maxlength":'"Max length is reached"',minlength:'"Minimim Characters Required"'}}},{key:"lastName",id:"lastName",type:"ep-text",className:"flex-20",templateOptions:{label:"Last Name",required:!0,maxlength:20,minlength:4,noFloat:!1},validation:{messages:{required:'"Last Name is required"',"md-maxlength":'"Max length is reached"',minlength:'"Minimim Characters Required"'}}},{key:"button",id:"Button1",type:"ep-button",templateOptions:{class:"md-raised md-primary",title:"Submit",label:"Submit",onClick:"formState.onSubmit(model, form)"}}],t.tab={},t.addTab=function(e){Object.keys(e).length>0&&(t.options.formState.tabs.push(angular.copy(e)),t.tab={})},t.userFields=[{key:"Tabs",id:"Tabs",type:"ep-tabs",templateOptions:{tabclass:"",alignTabs:"top",stretchTabs:"auto",dynamicHeight:!0,centerTabs:!1,noPagination:!1,swipeContent:!0,enableDisconnect:!0,autoselect:!1,noSelectClick:!1},expressionProperties:{"templateOptions.options":"formState.tabs"}}],t.actualFormFields=angular.copy(t.userFields),t.options={formState:{programName:"Nissan",formName:"Sample",tabs:[{label:"One",content:"<p>Tabs will become paginated if there isn't enough room for them.</p>",formRequired:!0,formModel:t.formModel.employee,formFields:t.employeeFields,contentClass:"light-bg",options:{formState:{onSubmit:t.submit}}},{label:"Two",content:"<p>You can swipe left and right on a mobile device to change tabs.</p>",disabled:!0},{label:"Three",content:"<p>You can bind the selected tab via the selected attribute on the md-tabs element.</p>"},{label:"Four",content:"<p>If you set the selected tab binding to -1, it will leave no tab selected.</p>"},{label:"Five",content:"<p>If you remove a tab, it will try to select a new one.</p>"},{label:"Six",content:"<p>There's an ink bar that follows the selected tab, you can turn it off if you want.</p>"},{label:"Seven",content:"<p>If you set ng-disabled on a tab, it becomes unselectable. </p><p>If the currently selected tab becomes disabled, it will try to select the next tab.</p>"},{label:'<i class="material-icons">home</i>',content:"<p>If you look at the source, you're using tabs to look at a demo for tabs. Recursion!</p>"},{label:'<i class="material-icons">contacts</i>',content:'<p>If you set md-theme="green" on the md-tabs element, you\'ll get green tabs.</p>'},{label:'<i class="material-icons">account_balance</i>',content:"<p>If you're still reading this, you should just go check out the API docs for tabs!</p>"}]}}}angular.module("ep.formly.samples").controller("tabsController",e),e.$inject=["$scope"]}(),function(){"use strict";function e(e){var t=this;t.submit=function(e){t.myform.$invalid&&angular.forEach(t.myform.$error,function(e){angular.forEach(e,function(e){e.$setTouched()})}),console.log(e),console.log(t.myForm)},t.formModel={Description:"Enter some text and hit enter a few times. Then delete all the text."},t.userFields=[{key:"Description",id:"Description",type:"ep-textarea",className:"col-md-12",templateOptions:{label:"Description",required:!0,maxlength:300,minlength:10,rows:3},validation:{messages:{required:'"Description is required"',"md-maxlength":'"Max length is reached"',minlength:'"Minimum Characters Required"'}}}],t.actualFormFields=angular.copy(t.userFields),t.options={formState:{programName:"Ford Campaigns",formName:"Campaign Detail"}},function(){console.log("Activated Textarea")}()}angular.module("ep.formly.samples").controller("textareaTemplate",e),e.$inject=["$scope"]}(),function(){"use strict";function e(e){var t=this;t.submit=function(e){t.myform.$invalid&&angular.forEach(t.myform.$error,function(e){angular.forEach(e,function(e){e.$setTouched()})}),console.log(e),console.log(t.myForm)},t.formModel={phone:"998-458-1245",email:"test@test.com"},t.userFields=[{key:"phone",id:"phone",type:"ep-text",templateOptions:{label:"Phone",required:!0,maxlength:30,minlength:10,disabled:!0,placeholder:"phone here...",noFloat:!0,validator:"phone"},validation:{messages:{required:'"Phone is required"',pattern:'"Invalid Phone Expected Format : xxx-xxx-xxxx"',"md-maxlength":'"Max length is reached"',minlength:'"Minimim Characters Required"'}}},{key:"password",id:"password",type:"ep-text",templateOptions:{label:"Password",required:!0,type:"password"},validation:{messages:{required:'"Password is required"'}}},{key:"numbers",id:"numbers",type:"ep-text",templateOptions:{label:"Numbers",required:!0,type:"number"},validation:{messages:{required:'"Number is required"',pattern:"'Only Numbers allowed'"}}},{key:"date",id:"date",type:"ep-text",templateOptions:{label:"Date",required:!0,type:"date"},validation:{messages:{required:'"Date is required"',date:"'Invalid date'"}}},{template:['<div style="border-radius:0px;padding:1px;border:solid 2px gray;" md-whiteframe="2">','<md-toolbar layout-align="center start"><span layout-padding>Info:</span></md-toolbar>',"<md-content layout-padding><p>If a <b>placeholder</b> property in <b>templateOptions</b> is set then floating is disabled on the label</p>",'<p>In the above <b>"phone" field there is a placeholder</b> option is set, where as the <b>"email"'," field does not have one.</b></p></md-content>","</div></br>"].join("")},{key:"email",id:"email",type:"ep-text",templateOptions:{label:"Email",required:!0,maxlength:60,minlength:3,validator:"custom",pattern:"^\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$"},validation:{messages:{required:'"Email is required"',pattern:'"Invalid Email - Expected Format : xxx@xxx.xxx"',"md-maxlength":'"Max length is reached"',minlength:'"Minimum Characters Required"'}}}],t.actualFormFields=angular.copy(t.userFields),t.options={formState:{programName:"Ford Campaigns",formName:"Campaign Detail"}},function(){console.log("Activated Textbox")}()}angular.module("ep.formly.samples").controller("textboxTemplate",e),e.$inject=["$scope"]}(),function(){"use strict";function e(e,t,a){function o(e,t,a){var o=this;o.row=a,o.cancel=function(){t.cancel()}}var l=this;!function(){t.post("/api/getJson/piggyBank").then(function(e){l.data=e.data})}(),l.formModel={},l.userFields=[{type:"ep-uigrid",id:"myGrid",templateOptions:{apiUrl:"/api/getJson/piggyBank",enableFiltering:!0,enablePagination:l.enablePagination,enablePaginationControls:l.enablePagination,paginationPageSizes:[25,50,75],paginationPageSize:25,columnDefs:[{field:"index",displayName:"Sl.No",cellTemplate:['<div layout="row" layout-align="center center">','<span ng-bind="row.entity.index"></span>',"</div>"].join(""),headerCellTemplate:['<div layout-padding layout-align="center center">','<div layout="row"><span>Sl.No</span></div>','<div layout="row" style="background-color:gray;color:white;">',"<p>Adding a header template is going to remove the default header","template that has the filter and sort option.</p></div></div>"].join("")},{field:"dummy",enableFiltering:!1,displayName:"Row Entity",cellTemplate:['<div layout="row" layout-align="center center">','<md-button class="md-icon-button md-primary" ng-click="grid.appScope.formState.clickEventSample(row, $event)" aria-label="test click">','<i class="material-icons">details</i></md-icon></md-button>',"</div>"].join(""),cellClass:"demoCellClass"},{name:"Name",field:"name"},{name:"Age",field:"age",enableHiding:!1},{name:"Balance",field:"balance",enableSorting:!1}],data:[{index:8,name:"Michael Huffman",age:24,balance:"$2,028.75"},{index:9,name:"Bartlett Baird",age:32,balance:"$2,787.56"},{index:10,name:"Baird Mccray",age:23,balance:"$2,090.15"},{index:11,name:"Barker Hall",age:25,balance:"$1,022.24"}]}}],l.options={formState:{disabled:!0,test:"This text is passed in from FormState",clickEventSample:function(e,t){a.show({controller:o,controllerAs:"dc",templateUrl:"/app/samples/ui-grid-model-template1.html",parent:angular.element(document.body),targetEvent:t,clickOutsideToClose:!1,locals:{row:e}})}}},o.$inject=["$scope","$mdDialog","row"]}angular.module("ep.formly.samples").controller("UiGridController",e),e.$inject=["$scope","$http","$mdDialog"]}(),function(){"use strict";function e(e){this.menuItems=[{name:"Form controls",items:[{name:"TextBox",url:"/textbox"},{name:"Text area",url:"/textarea"},{name:"Checkbox",url:"/checkbox"},{name:"Switch",url:"/switch"},{name:"Dropdown",url:"/dropdown"},{name:"File Upload",url:"/fileupload"},{name:"Radio Button",url:"/radiobutton"},{name:"AutoComplete",url:"/autocomplete"},{name:"Modal Popup",url:"/modalpopup"},{name:"Date Picker",url:"/datepicker"},{name:"Button",url:"/buttons"},{name:"Label",url:"/label"}]},{name:"Collective components",items:[{name:"Ui-Grid",url:"/uigrid"},{name:"Data-Table",url:"/datatable"},{name:"Accordion",url:"/accordion"}]},{name:"Special components",items:[{name:"Card",url:"/card"},{name:"Tabs",url:"/tabs"}]},{name:"Demos",items:[{name:"Material Demo",url:"/materialdemo"}]}]}angular.module("ep.formly.layout").controller("Shell",e),e.$inject=["$timeout"]}(),function(){"use strict";function e(){function e(e,t,a){}return{bindToController:!0,transclude:!0,controller:t,templateUrl:"app/directives/demoPanel/demoPanel.html",controllerAs:"vm",link:e,restrict:"E",scope:{title:"@"}}}function t(){}angular.module("ep.formly.directives").directive("demoPanel",e),t.$inject=["$scope"]}();